#!/usr/bin/env bash
set -euo pipefail

APP_ROOT="$(cd "$(dirname "$0")/.." && pwd)"
cd "$APP_ROOT"

PORT="${TAURI_DEV_PORT:-${PORT:-3001}}"
PUBLIC_HOST="${TAURI_DEV_HOST:-0.0.0.0}"
LISTEN_HOST="${ANDROID_DEV_LISTEN_HOST:-0.0.0.0}"
PIDFILE="tmp/pids/android-dev-server.pid"
SERVER_PIDFILE="tmp/pids/server.pid"

mkdir -p tmp/pids

stop_pid_file() {
  local file="$1"
  if [[ -f "$file" ]]; then
    local existing_pid
    existing_pid="$(cat "$file" 2>/dev/null || true)"
    if [[ -n "$existing_pid" ]] && ps -p "$existing_pid" >/dev/null 2>&1; then
      echo "Stopping previous Rails server (pid $existing_pid)"
      kill "$existing_pid" >/dev/null 2>&1 || true
      wait "$existing_pid" 2>/dev/null || true
    fi
    rm -f "$file"
  fi
}

stop_pid_file "$PIDFILE"
stop_pid_file "$SERVER_PIDFILE"

attempts=0
while lsof -ti tcp:"$PORT" >/dev/null 2>&1; do
  echo "Port $PORT in use; terminating occupying processes"
  while read -r pid; do
    [[ -z "$pid" ]] && continue
    echo "Stopping process $pid on port $PORT"
    kill "$pid" >/dev/null 2>&1 || true
  done < <(lsof -ti tcp:"$PORT")
  sleep 1
  attempts=$((attempts + 1))
  if (( attempts > 5 )); then
    echo "Unable to free port $PORT after $attempts attempts."
    exit 1
  fi
done

bundle check >/dev/null 2>&1 || bundle install

echo $$ > "$PIDFILE"
echo "Starting Rails android server on $LISTEN_HOST:$PORT (public host: $PUBLIC_HOST)"
exec bundle exec rails server -p "$PORT" -b "$LISTEN_HOST" -e android
